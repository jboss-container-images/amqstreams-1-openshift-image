apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: amqstreams.v1.5.2
  namespace: placeholder
  annotations:
    capabilities: Deep Insights
    alm-examples: |-
      [
        {
          "apiVersion":"kafka.strimzi.io/v1beta1",
          "kind":"Kafka",
          "metadata":{
            "name":"my-cluster"
          },
          "spec":{
            "kafka":{
                "version":"2.5.0",
                "replicas":3,
                "listeners":{
                  "plain":{
                    "authentiation":{
                      "type":"scram-sha-512"
                    }
                  },
                  "tls":{
                    "authentiation":{
                      "type":"tls"
                    }
                  }
                },
                "config":{
                  "offsets.topic.replication.factor":3,
                  "transaction.state.log.replication.factor":3,
                  "transaction.state.log.min.isr":2,
                  "log.message.format.version":"2.5"
                },
                "storage":{
                  "type":"ephemeral"
                }
            },
            "zookeeper":{
                "replicas":3,
                "storage":{
                  "type":"ephemeral"
                }
            },
            "entityOperator":{
                "topicOperator":{
                  "reconciliationIntervalSeconds":90
                },
                "userOperator":{
                  "reconciliationIntervalSeconds":120
                }
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta1",
          "kind":"KafkaConnect",
          "metadata":{
            "name":"my-connect-cluster"
          },
          "spec":{
            "version":"2.5.0",
            "replicas":1,
            "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
            "tls":{
                "trustedCertificates":[
                  {
                      "secretName":"my-cluster-cluster-ca-cert",
                      "certificate":"ca.crt"
                  }
                ]
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta1",
          "kind":"KafkaConnectS2I",
          "metadata":{
            "name":"my-connect-cluster"
          },
          "spec":{
            "version":"2.5.0",
            "replicas":1,
            "bootstrapServers":"my-cluster-kafka-bootstrap:9093",
            "tls":{
                "trustedCertificates":[
                  {
                      "secretName":"my-cluster-cluster-ca-cert",
                      "certificate":"ca.crt"
                  }
                ]
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta1",
          "kind":"KafkaMirrorMaker",
          "metadata":{
            "name":"my-mirror-maker"
          },
          "spec":{
            "version":"2.5.0",
            "replicas":1,
            "consumer":{
                "bootstrapServers":"my-source-cluster-kafka-bootstrap:9092",
                "groupId":"my-source-group-id"
            },
            "producer":{
                "bootstrapServers":"my-target-cluster-kafka-bootstrap:9092"
            },
            "whitelist":".*"
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1alpha1",
          "kind":"KafkaBridge",
          "metadata":{
            "name":"my-bridge"
          },
          "spec":{
            "replicas":1,
            "bootstrapServers":"my-cluster-kafka-bootstrap:9092",
            "http":{
                "port":8080
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta1",
          "kind":"KafkaTopic",
          "metadata":{
            "name":"my-topic",
            "labels":{
                "strimzi.io/cluster":"my-cluster"
            }
          },
          "spec":{
            "partitions":10,
            "replicas":3,
            "config":{
                "retention.ms":604800000,
                "segment.bytes":1073741824
            }
          }
        },
        {
          "apiVersion":"kafka.strimzi.io/v1beta1",
          "kind":"KafkaUser",
          "metadata":{
            "name":"my-user",
            "labels":{
                "strimzi.io/cluster":"my-cluster"
            }
          },
          "spec":{
            "authentication":{
                "type":"tls"
            },
            "authorization":{
                "type":"simple",
                "acls":[
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Read",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Describe",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"group",
                        "name":"my-group",
                        "patternType":"literal"
                      },
                      "operation":"Read",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Write",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Create",
                      "host":"*"
                  },
                  {
                      "resource":{
                        "type":"topic",
                        "name":"my-topic",
                        "patternType":"literal"
                      },
                      "operation":"Describe",
                      "host":"*"
                  }
                ]
            }
          }
        },
        {
          "apiVersion": "kafka.strimzi.io/v1alpha1",
          "kind": "KafkaConnector",
          "metadata": {
            "name": "my-source-connector",
            "labels": {
              "strimzi.io/cluster": "my-connect-cluster"
            }
          },
          "spec": {
            "class": "org.apache.kafka.connect.file.FileStreamSourceConnector",
            "tasksMax": 2,
            "config": {
              "file": "/opt/kafka/LICENSE",
              "topic": "my-topic"
            }
          }
        },
        {
          "apiVersion": "kafka.strimzi.io/v1alpha1",
          "kind": "KafkaMirrorMaker2",
          "metadata": {
            "name": "my-mm2-cluster"
          },
          "spec": {
            "version":"2.5.0",
            "replicas": 1,
            "connectCluster": "my-cluster-target",
            "clusters": [
              {
                "alias": "my-cluster-source",
                "bootstrapServers": "my-cluster-source-kafka-bootstrap:9092"
              },
              {
                "alias": "my-cluster-target",
                "bootstrapServers": "my-cluster-target-kafka-bootstrap:9092",
                "config": {
                  "config.storage.replication.factor": 1,
                  "offset.storage.replication.factor": 1,
                  "status.storage.replication.factor": 1
                }
              }
            ],
            "mirrors": [
              {
                "sourceCluster": "my-cluster-source",
                "targetCluster": "my-cluster-target",
                "sourceConnector": {
                  "config": {
                    "replication.factor": 1,
                    "offset-syncs.topic.replication.factor": 1,
                    "sync.topic.acls.enabled": "false"
                  }
                },
                "heartbeatConnector": {
                  "config": {
                    "heartbeats.topic.replication.factor": 1
                  }
                },
                "checkpointConnector": {
                  "config": {
                    "checkpoints.topic.replication.factor": 1
                  }
                },
                "topicsPattern": ".*",
                "groupsPattern": ".*"
              }
            ]
          }
        },
        {
          "apiVersion": "kafka.strimzi.io/v1alpha1",
          "kind": "KafkaRebalance",
          "metadata": {
            "name": "my-rebalance",
            "labels": {
              "strimzi.io/cluster": "my-cluster"
            }
          },
          "spec": {
            "goals": [
              "NetworkInboundCapacityGoal",
              "DiskCapacityGoal",
              "RackAwareGoal",
              "NetworkOutboundCapacityGoal",
              "CpuCapacityGoal",
              "ReplicaCapacityGoal"
            ]
          }
        }
      ]
    categories: "Streaming & Messaging"
    certified: "false"
    description: Red Hat AMQ Streams is a massively scalable, distributed, and high performance data streaming platform based on Apache KafkaÂ®.
    containerImage: registry.redhat.io/amq7/amq-streams-rhel7-operator@sha256:f271230edd4d556f327a61ae3cee430cf5b3969b70cbda5b65c1739262932a21
    repository: https://github.com/strimzi/strimzi-kafka-operator
    createdAt: 2020-05-25T10:00:00Z
    support: Red Hat
    operators.openshift.io/infrastructure-features: |-
      ["Disconnected", "Proxy"]
    operators.openshift.io/valid-subscription: |-
      ["Red Hat Integration", "Red Hat AMQ"]
spec:
  displayName: Red Hat Integration - AMQ Streams
  description: |
    **Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache KafkaÂ® project. 
    AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency. 
    
    **The core capabilities include:**

    * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream

    * The long term, fault-tolerant storage of events

    * The ability for a consumer to replay streams of events

    * The ability to partition topics for horizontal scalability

    Red Hat AMQ Streams provides a way to run an [Apache Kafka](https://kafka.apache.org) cluster on [OpenShift](https://www.openshift.com/) in various deployment configurations.
    See the Red Hat AMQ [website](https://access.redhat.com/products/red-hat-amq) for more details about the project.

    ### What is new in AMQ Streams 1.5

    * Support for Apache Kafka 2.5.0

    * Built-in Cruise Control support, in Tech Preview, for cluster rebalancing

    * New operator metrics and new Grafana dashbaord for operator monitoring

    * Improved configurability of TLS

    * CORS support in the HTTP Bridge

    ### Supported Features

    * **Manages the Kafka Cluster** - Deploys and manages all of the components of this complex application, including dependencies like Apache ZooKeeperÂ® that are traditionally hard to administer.

    * **Includes Kafka Connect** - Allows for configuration of common data sources and sinks to move data into and out of the Kafka cluster.

    * **Topic Management** - Creates and manages Kafka Topics within the cluster.

    * **User Management** - Creates and manages Kafka Users within the cluster.

    * **Includes Kafka Mirror Maker 1 and 2** - Allows for morroring data between different Apache KafkaÂ® clusters.

    * **Includes HTTP Kafka Bridge** - Allows clients to send and receive messages through an Apache KafkaÂ® cluster via HTTP protocol.

    * **Cluster Rebalancing** - Uses built-in Cruise Control for redistributes partition replicas according to specified goals in order to achieve the best cluster performance.

    * **Monitoring** - Built-in support for monitoring using Prometheus and provided Grafana dashabords.

    ### Upgrading your Clusters
    
    The AMQ Streams operator understands how to run and upgrade between a set of Kafka versions.
    When specifying a new version in your config, check to make sure you are not using any features that may have been removed.
    See [the upgrade guide](https://access.redhat.com/documentation/en-us/red_hat_amq/7.7/html-single/using_amq_streams_on_openshift/index) for more information.

    ### Security

    AMQ Streams supports TLS encryption, authentication, and authorization out of the box.
    Supported authentication methods are TLS client certificates, SCRAM-SHA mechanism based on username and password, and OAuth authentication.

    ### Monitoring

    AMQ Streams has support for Prometheus metrics.
    Enable metrics in the custom resources and configure your Prometheus server to scrape the metrics from all Kafka and Zookeeper pods.
    With the integrated Kafka Exporter you have now also advanced metrics about topics, consumer groups and consumer group lag.
    
    ### Storage

    An efficient data storage infrastructure is essential to the optimal performance of AMQ Streams.
    AMQ Streams requires block storage.
    The use of file storage (for example, NFS) is not recommended.

    AMQ Streams supports three types of data storage:

    * Ephemeral (Recommended for development only)

    * Persistent

    * JBOD (Just a Bunch of Disks, suitable for Kafka only. Not supported in Zookeeper.)

    AMQ Streams also supports advanced operations such as adding or removing disks in Kafka brokers or resizing the persistent volumes (where supported by the infrastructure).

    ### Documentation

    Documentation for the current release can be found on Red Hat [website](https://access.redhat.com/documentation/en-us/red_hat_amq/7.7/html-single/using_amq_streams_on_openshift/index).
    
  keywords: ['amq', 'amq-streams', 'kafka', 'messaging', 'kafka-connect', 'kafka-streams', 'data-streaming', 'data-streams', 'streaming', 'streams']
  version: 1.5.2
  replaces: amqstreams.v1.5.1
  minKubeVersion: 1.11.0
  maturity: stable
  maintainers:
  - name: Red Hat
    email: customerservice@redhat.com
  provider:
    name: Red Hat
  labels:
    name: amq-streams-cluster-operator
  selector:
    matchLabels:
      name: amq-streams-cluster-operator
  links:
  - name: Product Page
    url: https://access.redhat.com/products/red-hat-amq
  - name: Documentation
    url: https://access.redhat.com/documentation/en-us/red_hat_amq/7.7/html-single/using_amq_streams_on_openshift/index
  icon:
  - base64data: 
    mediatype: image/png
  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: true
  - type: AllNamespaces
    supported: true
  relatedImages:
  - name: strimzi-cluster-operator
    image: registry.redhat.io/amq7/amq-streams-rhel7-operator@sha256:f271230edd4d556f327a61ae3cee430cf5b3969b70cbda5b65c1739262932a21
  - name: strimzi-kafka-24
    image: registry.redhat.io/amq7/amq-streams-kafka-24-rhel7@sha256:29694979701f2d86665bf4d42542f4934c0d4025bfb4212da93c6edac3d9e39f
  - name: strimzi-kafka-25
    image: registry.redhat.io/amq7/amq-streams-kafka-25-rhel7@sha256:33479db6e036143b43369f6dc96440e58bbbc1fb4834908aa66dc7f871c7451b
  - name: strimzi-bridge
    image: registry.redhat.io/amq7/amq-streams-bridge-rhel7@sha256:aed4bf10ad0944be65171edb8e83758002f0dedd546df833fcffa0cc4fd09622
  install:
    strategy: deployment
    spec:
      permissions:
      - serviceAccountName: strimzi-cluster-operator
        rules:
        - apiGroups:
          - ""
          resources:
          # The cluster operator needs to access and manage service accounts to grant Strimzi components cluster permissions
          - serviceaccounts
          verbs:
          - get
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - "rbac.authorization.k8s.io"
          resources:
          # The cluster operator needs to access and manage rolebindings to grant Strimzi components cluster permissions
          - rolebindings
          verbs:
          - get
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          # The cluster operator needs to access and manage config maps for Strimzi components configuration
          - configmaps
          # The cluster operator needs to access and manage services to expose Strimzi components to network traffic
          - services
          # The cluster operator needs to access and manage secrets to handle credentials
          # The entity operator user-operator needs to access and manage secrets to store generated credentials
          - secrets
          # The cluster operator needs to access and manage persistent volume claims to bind them to Strimzi components for persistent data
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - "kafka.strimzi.io"
          resources:
          # The cluster operator runs the KafkaAssemblyOperator, which needs to access and manage Kafka resources
          - kafkas
          - kafkas/status
          # The cluster operator runs the KafkaConnectAssemblyOperator, which needs to access and manage KafkaConnect resources
          - kafkaconnects
          - kafkaconnects/status
          # The cluster operator runs the KafkaConnectS2IAssemblyOperator, which needs to access and manage KafkaConnectS2I resources
          - kafkaconnects2is
          - kafkaconnects2is/status
          # The cluster operator runs the KafkaConnectorAssemblyOperator, which needs to access and manage KafkaConnector resources
          - kafkaconnectors
          - kafkaconnectors/status
          # The cluster operator runs the KafkaMirrorMakerAssemblyOperator, which needs to access and manage KafkaMirrorMaker resources
          - kafkamirrormakers
          - kafkamirrormakers/status
          # The cluster operator runs the KafkaBridgeAssemblyOperator, which needs to access and manage BridgeMaker resources
          - kafkabridges
          - kafkabridges/status
          # The cluster operator runs the KafkaMirrorMaker2AssemblyOperator, which needs to access and manage KafkaMirrorMaker2 resources
          - kafkamirrormaker2s
          - kafkamirrormaker2s/status
          # The cluster operator runs the KafkaRebalanceAssemblyOperator, which needs to access and manage KafkaRebalance resources
          - kafkarebalances
          - kafkarebalances/status
          # The entity operator runs the KafkaTopic assembly operator, which needs to access and manage KafkaTopic resources
          - kafkatopics
          - kafkatopics/status
          # The entity operator runs the KafkaUser assembly operator, which needs to access and manage KafkaUser resources
          - kafkausers
          - kafkausers/status
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          # The cluster operator needs to access and delete pods, this is to allow it to monitor pod health and coordinate rolling updates
          - pods
          verbs:
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          # The cluster operator needs the extensions api as the operator supports Kubernetes version 1.11+
          # apps/v1 was introduced in Kubernetes 1.14
          - "extensions"
          resources:
          # The cluster operator needs to access and manage deployments to run deployment based Strimzi components
          - deployments
          - deployments/scale
          # The cluster operator needs to access replica sets to manage Strimzi components and to determine error states
          - replicasets
          # The cluster operator needs to access and manage replication controllers to manage replicasets
          - replicationcontrollers
          # The cluster operator needs to access and manage network policies to lock down communication between Strimzi components
          - networkpolicies
          # The cluster operator needs to access and manage ingresses which allow external access to the services in a cluster
          - ingresses
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - "apps"
          resources:
          # The cluster operator needs to access and manage deployments to run deployment based Strimzi components
          - deployments
          - deployments/scale
          - deployments/status
          # The cluster operator needs to access and manage stateful sets to run stateful sets based Strimzi components
          - statefulsets
          # The cluster operator needs to access replica-sets to manage Strimzi components and to determine error states
          - replicasets
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          # The cluster operator needs to be able to create events and delegate permissions to do so
          # The entity operator needs to be able to create events
          - events
          verbs:
          - create
        - apiGroups:
          # OpenShift S2I requirements
          - apps.openshift.io
          resources:
          - deploymentconfigs
          - deploymentconfigs/scale
          - deploymentconfigs/status
          - deploymentconfigs/finalizers
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          # OpenShift S2I requirements
          - build.openshift.io
          resources:
          - buildconfigs
          - builds
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - watch
          - update
        - apiGroups:
          # OpenShift S2I requirements
          - image.openshift.io
          resources:
          - imagestreams
          - imagestreams/status
          verbs:
          - create
          - delete
          - get
          - list
          - watch
          - patch
          - update
        - apiGroups:
          - networking.k8s.io
          resources:
          # The cluster operator needs to access and manage network policies to lock down communication between Strimzi components
          - networkpolicies
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - route.openshift.io
          resources:
          # The cluster operator needs to access and manage routes to expose Strimzi components for external access
          - routes
          - routes/custom-host
          verbs:
          - get
          - list
          - create
          - delete
          - patch
          - update
        - apiGroups:
          - policy
          resources:
          # The cluster operator needs to access and manage pod disruption budgets this limits the number of concurrent disruptions
          # that a Strimzi component experiences, allowing for higher availability
          - poddisruptionbudgets
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - patch
          - update
      clusterPermissions:
      - serviceAccountName: strimzi-cluster-operator
        rules:
        - apiGroups:
          - "rbac.authorization.k8s.io"
          resources:
          # The cluster operator needs to create and manage cluster role bindings in the case of an install where a user
          # has specified they want their cluster role bindings generated
          - clusterrolebindings
          verbs:
          - get
          - create
          - delete
          - patch
          - update
          - watch
        - apiGroups:
          - storage.k8s.io
          resources:
          # The cluster operator requires "get" permissions to view storage class details
          # This is because only a persistent volume of a supported storage class type can be resized
          - storageclasses
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          # The cluster operator requires "list" permissions to view all nodes in a cluster
          # The listing is used to determine the node addresses when NodePort access is configured
          # These addresses are then exposed in the custom resource states
          # The Kafka Brokers require "get" permissions to view the node they are on
          # This information is used to generate a Rack ID that is used for High Availability configurations
          - nodes
          verbs:
          - get
          - list
      deployments:
      - name: amq-streams-cluster-operator-v1.5.2
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: amq-streams-cluster-operator
              strimzi.io/kind: cluster-operator
          template:
            metadata:
              labels:
                name: amq-streams-cluster-operator
                strimzi.io/kind: cluster-operator
            spec:
              serviceAccountName: strimzi-cluster-operator
              containers:
              - name: cluster-operator
                image: registry.redhat.io/amq7/amq-streams-rhel7-operator@sha256:f271230edd4d556f327a61ae3cee430cf5b3969b70cbda5b65c1739262932a21
                imagePullPolicy: IfNotPresent
                args:
                - /opt/strimzi/bin/cluster_operator_run.sh
                env:
                - name: STRIMZI_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
                  value: "120000"
                - name: STRIMZI_OPERATION_TIMEOUT_MS
                  value: "300000"
                - name: STRIMZI_DEFAULT_TLS_SIDECAR_ENTITY_OPERATOR_IMAGE
                  value: registry.redhat.io/amq7/amq-streams-kafka-25-rhel7@sha256:33479db6e036143b43369f6dc96440e58bbbc1fb4834908aa66dc7f871c7451b
                - name: STRIMZI_DEFAULT_TLS_SIDECAR_KAFKA_IMAGE
                  value: registry.redhat.io/amq7/amq-streams-kafka-25-rhel7@sha256:33479db6e036143b43369f6dc96440e58bbbc1fb4834908aa66dc7f871c7451b
                - name: STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE
                  value: registry.redhat.io/amq7/amq-streams-kafka-25-rhel7@sha256:33479db6e036143b43369f6dc96440e58bbbc1fb4834908aa66dc7f871c7451b
                - name: STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE
                  value: registry.redhat.io/amq7/amq-streams-kafka-25-rhel7@sha256:33479db6e036143b43369f6dc96440e58bbbc1fb4834908aa66dc7f871c7451b
                - name: STRIMZI_DEFAULT_TLS_SIDECAR_CRUISE_CONTROL_IMAGE
                  value: registry.redhat.io/amq7/amq-streams-kafka-25-rhel7@sha256:33479db6e036143b43369f6dc96440e58bbbc1fb4834908aa66dc7f871c7451b
                - name: STRIMZI_KAFKA_IMAGES
                  value: |
                    2.4.0=registry.redhat.io/amq7/amq-streams-kafka-24-rhel7@sha256:29694979701f2d86665bf4d42542f4934c0d4025bfb4212da93c6edac3d9e39f
                    2.5.0=registry.redhat.io/amq7/amq-streams-kafka-25-rhel7@sha256:33479db6e036143b43369f6dc96440e58bbbc1fb4834908aa66dc7f871c7451b
                - name: STRIMZI_KAFKA_CONNECT_IMAGES
                  value: |
                    2.4.0=registry.redhat.io/amq7/amq-streams-kafka-24-rhel7@sha256:29694979701f2d86665bf4d42542f4934c0d4025bfb4212da93c6edac3d9e39f
                    2.5.0=registry.redhat.io/amq7/amq-streams-kafka-25-rhel7@sha256:33479db6e036143b43369f6dc96440e58bbbc1fb4834908aa66dc7f871c7451b
                - name: STRIMZI_KAFKA_CONNECT_S2I_IMAGES
                  value: |
                    2.4.0=registry.redhat.io/amq7/amq-streams-kafka-24-rhel7@sha256:29694979701f2d86665bf4d42542f4934c0d4025bfb4212da93c6edac3d9e39f
                    2.5.0=registry.redhat.io/amq7/amq-streams-kafka-25-rhel7@sha256:33479db6e036143b43369f6dc96440e58bbbc1fb4834908aa66dc7f871c7451b
                - name: STRIMZI_KAFKA_MIRROR_MAKER_IMAGES
                  value: |
                    2.4.0=registry.redhat.io/amq7/amq-streams-kafka-24-rhel7@sha256:29694979701f2d86665bf4d42542f4934c0d4025bfb4212da93c6edac3d9e39f
                    2.5.0=registry.redhat.io/amq7/amq-streams-kafka-25-rhel7@sha256:33479db6e036143b43369f6dc96440e58bbbc1fb4834908aa66dc7f871c7451b
                - name: STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES
                  value: |
                    2.4.0=registry.redhat.io/amq7/amq-streams-kafka-24-rhel7@sha256:29694979701f2d86665bf4d42542f4934c0d4025bfb4212da93c6edac3d9e39f
                    2.5.0=registry.redhat.io/amq7/amq-streams-kafka-25-rhel7@sha256:33479db6e036143b43369f6dc96440e58bbbc1fb4834908aa66dc7f871c7451b
                - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
                  value: registry.redhat.io/amq7/amq-streams-rhel7-operator@sha256:f271230edd4d556f327a61ae3cee430cf5b3969b70cbda5b65c1739262932a21
                - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
                  value: registry.redhat.io/amq7/amq-streams-rhel7-operator@sha256:f271230edd4d556f327a61ae3cee430cf5b3969b70cbda5b65c1739262932a21
                - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
                  value: registry.redhat.io/amq7/amq-streams-rhel7-operator@sha256:f271230edd4d556f327a61ae3cee430cf5b3969b70cbda5b65c1739262932a21
                - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
                  value: registry.redhat.io/amq7/amq-streams-bridge-rhel7@sha256:aed4bf10ad0944be65171edb8e83758002f0dedd546df833fcffa0cc4fd09622
                - name: STRIMZI_LOG_LEVEL
                  value: "INFO"
                - name: STRIMZI_CUSTOM_KAFKA_BRIDGE_SERVICE_LABELS
                  value: |
                    discovery.3scale.net=true
                - name: STRIMZI_CUSTOM_KAFKA_BRIDGE_SERVICE_ANNOTATIONS
                  value: |
                    discovery.3scale.net/scheme=http
                    discovery.3scale.net/port=8080
                    discovery.3scale.net/path=/
                    discovery.3scale.net/description-path=/openapi
                ports:
                - containerPort: 8080
                  name: http
                livenessProbe:
                  httpGet:
                    path: /healthy
                    port: 8080
                  initialDelaySeconds: 10
                  periodSeconds: 30
                readinessProbe:
                  httpGet:
                    path: /ready
                    port: 8080
                  initialDelaySeconds: 10
                  periodSeconds: 30
                resources:
                  limits:
                    cpu: 1000m
                    memory: 384Mi
                  requests:
                    cpu: 200m
                    memory: 384Mi
          strategy:
            type: Recreate
  customresourcedefinitions:
    owned:
    - name: kafkas.kafka.strimzi.io
      version: v1beta1
      kind: Kafka
      displayName: Kafka
      description: Represents a Kafka cluster
      resources:
      - kind: Route
        name: ''
        version: route.openshift.io/v1
      - kind: Service
        name: ''
        version: v1
      - kind: StatefulSet
        name: ''
        version: v1
      - kind: Deployment
        name: ''
        version: v1
      - kind: ReplicaSet
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      - kind: Secret
        name: ''
        version: v1
      specDescriptors:
      - description: Kafka version
        displayName: Version
        path: kafka.version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The desired number of Kafka brokers.
        displayName: Kafka Brokers
        path: kafka.replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: The type of storage used by Kafka brokers
        displayName: Kafka storage
        path: kafka.storage.type
        x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Kafka Resource Requirements
        path: kafka.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: The desired number of Zookeeper nodes.
        displayName: Zookeeper Nodes
        path: zookeeper.replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: The type of storage used by Zookeeper nodes
        displayName: Zookeeper storage
        path: zookeeper.storage.type
        x-descriptors:
          - urn:alm:descriptor:com.tectonic.ui:select:ephemeral
          - urn:alm:descriptor:com.tectonic.ui:select:persistent-claim
          - urn:alm:descriptor:com.tectonic.ui:select:jbod
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Zookeeper Resource Requirements
        path: zookeeper.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Kafka cluster conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
    - name: kafkaconnects.kafka.strimzi.io
      version: v1beta1
      kind: KafkaConnect
      displayName: Kafka Connect
      description: Represents a Kafka Connect cluster
      resources:
      - kind: Service
        name: ''
        version: v1
      - kind: Deployment
        name: ''
        version: v1
      - kind: ReplicaSet
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      specDescriptors:
      - description: The desired number of Kafka Connect nodes.
        displayName: Connect nodes
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Kafka Connect version
        displayName: Version
        path: version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The address of the bootstrap server
        displayName: Bootstrap server
        path: bootstrapServers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Kafka Connect conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
    - name: kafkaconnects2is.kafka.strimzi.io
      version: v1beta1
      kind: KafkaConnectS2I
      displayName: Kafka Connect S2I
      description: Represents a Kafka Connect cluster with Source 2 Image support
      resources:
      - kind: Service
        name: ''
        version: v1
      - kind: DeploymentConfig
        name: ''
        version: apps.openshift.io/v1
      - kind: ReplicationController
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      - kind: BuildConfig
        name: ''
        version: build.openshift.io/v1
      - kind: ImageStream
        name: ''
        version: image.openshift.io/v1
      specDescriptors:
      - description: The desired number of Kafka Connect nodes.
        displayName: Connect nodes
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Kafka Connect version
        displayName: Version
        path: version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The address of the bootstrap server
        displayName: Bootstrap server
        path: bootstrapServers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Kafka Connect conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
    - name: kafkamirrormakers.kafka.strimzi.io
      version: v1beta1
      kind: KafkaMirrorMaker
      displayName: Kafka MirrorMaker
      description: Represents a Kafka MirrorMaker cluster
      resources:
      - kind: Deployment
        name: ''
        version: v1
      - kind: ReplicaSet
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      specDescriptors:
      - description: The desired number of Kafka MirrorMaker nodes.
        displayName: MirrorMaker nodes
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Kafka Mirror Maker version
        displayName: Version
        path: version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The bootstrap address of the Source cluster
        displayName: Source cluster
        path: consumer.bootstrapServers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The bootstrap address of the Target cluster
        displayName: Target cluster
        path: producer.bootstrapServers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Expression specifying the topics which should be mirrored
        displayName: Mirrored topics
        path: whitelist
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Kafka MirrorMaker conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
    - name: kafkabridges.kafka.strimzi.io
      version: v1alpha1
      kind: KafkaBridge
      displayName: Kafka Bridge
      description: Represents a Kafka Bridge cluster
      resources:
      - kind: Deployment
        name: ''
        version: v1
      - kind: ReplicaSet
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      - kind: Service
        name: ''
        version: v1
      specDescriptors:
      - description: The desired number of Kafka Bridge nodes.
        displayName: Bridge nodes
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: The bootstrap address of the Kafka cluster
        displayName: Kafka cluster
        path: bootstrapServers
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The port where the HTTP Bridge is listening
        displayName: HTTP port
        path: http.port
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Kafka Bridge conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
    - name: kafkatopics.kafka.strimzi.io
      version: v1beta1
      kind: KafkaTopic
      displayName: Kafka Topic
      description: Represents a topic inside a Kafka cluster
      specDescriptors:
      - description: The number of partitions
        displayName: Partitions
        path: partitions
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The number of replicas
        displayName: Replication factor
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: Kafka topic conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
    - name: kafkausers.kafka.strimzi.io
      version: v1beta1
      kind: KafkaUser
      displayName: Kafka User
      description: Represents a user inside a Kafka cluster
      resources:
      - kind: Secret
        name: ''
        version: v1
      specDescriptors:
      - description: Authentication type
        displayName: Authentication type
        path: authentication.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:tls
        - urn:alm:descriptor:com.tectonic.ui:select:scram-sha-512
      - description: Authorization type
        displayName: Authorization type
        path: authorization.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:select:simple
      statusDescriptors:
      - description: Kafka user conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
    - name: kafkaconnectors.kafka.strimzi.io
      version: v1alpha1
      kind: KafkaConnector
      displayName: Kafka Connector
      description: Represents a Kafka Connect connector
      specDescriptors:
      - description: Class of the Kafka Connect connector
        displayName: Class
        path: class
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Maximum number of tasks used by the connector
        displayName: Max number of tasks
        path: tasksMax
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      statusDescriptors:
      - description: Connector conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
    - name: kafkamirrormaker2s.kafka.strimzi.io
      version: v1alpha1
      kind: KafkaMirrorMaker2
      displayName: Kafka MirrorMaker 2
      description: Represents a Kafka MirrorMaker 2 cluster
      resources:
      - kind: Deployment
        name: ''
        version: v1
      - kind: ReplicaSet
        name: ''
        version: v1
      - kind: Pod
        name: ''
        version: v1
      specDescriptors:
      - description: The desired number of Kafka MirrorMaker 2 nodes.
        displayName: MirrorMaker2 nodes
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Kafka MirrorMaker 2 version
        displayName: Version
        path: version
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The Kafka cluster where the underlying Kafka Cannect connects
        displayName: Connect cluster
        path: connectCluster
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Limits describes the minimum/maximum amount of compute resources
          required/allowed
        displayName: Resource Requirements
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Kafka MirrorMaker conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
    - name: kafkarebalances.kafka.strimzi.io
      version: v1alpha1
      kind: KafkaRebalance
      displayName: Kafka Rebalance
      description: Triggeres rebalance of replicas in a Kafka cluster
      resources: []
      specDescriptors:
      - description: Skip hard Cruise Cotnrol goals
        displayName: Skip hard goals
        path: 'skipHardGoalCheck'
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      statusDescriptors:
      - description: Kafka Rebalance conditions
        displayName: Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions

